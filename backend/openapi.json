{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Mesto - OpenAPI 3.0",
    "contact": {
      "email": "eve982@yandex.ru",
      "url": "https://github.com/eve982"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://eve982.pet-project.nomoredomains.work",
      "description": "Удаленный сервер (использует реальные данные)"
    },
    {
      "url": "https://localhost:{port}",
      "description": "Локальный сервер на порту 3000 (использует данные локальной БД)",
      "variables": {
        "port": {
          "enum": [
            "3000",
            "3001",
            "3002"
          ],
          "default": "3000",
          "description": "Выберите Ваш порт"
        }
      }
    },
    {
      "url": "https://eve982.pet-project.nomoredomains.work/",
      "variables": {}
    }
  ],
  "paths": {
    "/signup": {
      "post": {
        "summary": "Регистрация нового пользователя",
        "tags": [
          "authorization"
        ],
        "operationId": "signup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Пользователь успешно зарегистрирован",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "409": {
            "description": "Пользователь с таким email уже зарегистрирован"
          }
        }
      }
    },
    "/signin": {
      "post": {
        "summary": "Вход в личный кабинет",
        "tags": [
          "authorization"
        ],
        "operationId": "signin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Пользователь успешно авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Неверный логин, пароль или JWT-токен."
          },
          "404": {
            "description": "Пользователь с таким логином не найден."
          }
        }
      }
    },
    "/signout": {
      "post": {
        "summary": "Выход из личного кабинета.",
        "tags": [
          "authorization"
        ],
        "operationId": "logout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Вы вышли из аккаунта.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Неверный логин, пароль или JWT-токен."
          },
          "404": {
            "description": "Пользователь с таким логином не найден."
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Создать нового пользователя",
        "tags": [
          "users"
        ],
        "description": "Разрешено только для авторизованных пользователей.",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Новый пользователь создан",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Необходима авторизация."
          },
          "409": {
            "description": "Указанный при создании пользователя email уже есть на сервере"
          }
        }
      },
      "get": {
        "summary": "Получить список пользователей",
        "tags": [
          "users"
        ],
        "description": "Разрешено только для авторизованных пользователей.",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "Список пользователей получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "401": {
            "description": "Необходима авторизация."
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Получить информацию о пользователе по ID.",
        "tags": [
          "users"
        ],
        "description": "Разрешено только для авторизованных пользователей.",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Переданы некорректные данные."
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "summary": "Получить информацию о текущем пользователе.",
        "tags": [
          "users"
        ],
        "description": "Разрешено только для авторизованных пользователей.",
        "operationId": "getMyPage",
        "responses": {
          "200": {
            "description": "Информация о текущем пользователе.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Неправильное имя пользователя или пароль."
          },
          "404": {
            "description": "Такой пользователь не зарегистрирован."
          }
        }
      },
      "patch": {
        "summary": "Обновить информации о текущем пользователе.",
        "tags": [
          "users"
        ],
        "description": "Разрешено только для авторизованных пользователей.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "ID пользователя.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Обновление информации о пользователе.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Информация о пользователе успешно обновлена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Переданы некорректные данные."
          },
          "404": {
            "description": "Пользователя с таким ID не существует."
          }
        }
      }
    },
    "/users/me/avatar": {
      "patch": {
        "summary": "Обновить аватар текущего пользователя.",
        "tags": [
          "users"
        ],
        "description": "Разрешено только для авторизованных пользователей.",
        "operationId": "updateAvatar",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "ID пользователя.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Обновление информации о пользователе.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Информация о пользователе успешно обновлена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Переданы некорректные данные."
          },
          "404": {
            "description": "Пользователя с таким ID не существует."
          }
        }
      }
    },
    "/cards": {
      "post": {
        "summary": "Добавить фотографию.",
        "tags": [
          "cards"
        ],
        "description": "Разрешено только для авторизованных пользователей.",
        "operationId": "createCard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Card"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Фотография успешно добавлена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Card"
                }
              }
            }
          },
          "401": {
            "description": "Необходима авторизация."
          }
        }
      },
      "get": {
        "summary": "Получить все фотографии.",
        "tags": [
          "cards"
        ],
        "operationId": "getCards",
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cards"
                }
              }
            }
          },
          "401": {
            "description": "Необходима авторизация."
          }
        }
      }
    },
    "/cards/{cardId}": {
      "delete": {
        "tags": [
          "cards"
        ],
        "summary": "Удалить фотографию.",
        "description": "Разрешено только для авторизованных пользователей.",
        "operationId": "deleteCard",
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "ID фотографии.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Фотография успешно удалена!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Переданы некорректные данные."
          }
        }
      }
    },
    "/cards/{cardId}/likes": {
      "put": {
        "summary": "Поставить лайк фотографии.",
        "tags": [
          "cards"
        ],
        "description": "Разрешено только для авторизованных пользователей.",
        "operationId": "setCardLike",
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "ID фотографии.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Фотографии добавлен лайк от имени текущего пользователя.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cards"
                }
              }
            }
          },
          "400": {
            "description": "Переданы некорректные данные."
          },
          "404": {
            "description": "Фотографии с таким ID не существует."
          }
        }
      },
      "delete": {
        "summary": "Снять лайк с фотографии.",
        "tags": [
          "cards"
        ],
        "description": "Разрешено только для авторизованных пользователей.",
        "operationId": "deleteCardLike",
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "ID фотографии.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "У фотографии удален лайк от имени текущего пользователя.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cards"
                }
              }
            }
          },
          "400": {
            "description": "Переданы некорректные данные."
          },
          "404": {
            "description": "Фотографии с таким ID не существует."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "example": "Жак-Ив Кусто",
            "minLength": 2,
            "maxLength": 30,
            "pattern": "^[A-Za-z0-9]{3,10}$"
          },
          "email": {
            "type": "integer",
            "format": "email"
          },
          "about": {
            "type": "string",
            "example": "Исследователь",
            "pattern": "^example-[0-9a-z]+$",
            "maxLength": 30
          },
          "avatar": {
            "type": "string",
            "format": "http",
            "example": "https://avatars.dzeninfra.ru/get-zen_doc/4585608/pub_605c57a7109e966efd97d510_605c7663bf54ce495c4b770b/scale_1200",
            "maxLength": 32,
            "pattern": "^example-[0-9a-z]+$"
          }
        }
      },
      "Users": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "Card": {
        "type": "object",
        "required": [
          "name",
          "link"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "example": "Озеро Байкал",
            "description": "Название фотографии"
          },
          "link": {
            "type": "string",
            "format": "http",
            "example": "https://vsegda-pomnim.com/uploads/posts/2022-03/1647463586_6-vsegda-pomnim-com-p-ozero-baikal-foto-6.jpg",
            "description": "Ссылка на фотографию"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "likes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "example": "2017-01-01"
          }
        }
      },
      "Cards": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Card"
        }
      }
    }
  }
}